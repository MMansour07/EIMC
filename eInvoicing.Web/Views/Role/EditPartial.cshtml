@model eInvoicing.DTO.RoleDTO

<!--begin::Form-->
<!--begin::Wizard Form-->
@using (Html.BeginForm("editrole", "role", FormMethod.Post, new { @class = "", role = "form", id = "_editRoleFrm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="card-body">
    <div class="form-group row">
        @Html.HiddenFor(m => m.Id, new { @class = "form-control" })
    </div>
    <div class="form-group row">
        <div class="col-md-12">
            <label>Role Name *</label>
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Role Name", @name = "Name" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-12">
            <label>Role Description *</label>
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @placeholder = "Role Description", @rows = "5", @name = "Description" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-12">
            <label>Permissions *</label>
            @Html.ListBoxFor(model => model.Permissions, ViewBag.Permissions as SelectList, new { @class = "form-control select2", @id = "kt_select2_3", @name = "param", @multiple = "multiple", @placeholder = "Roles" })
            @Html.ValidationMessageFor(model => model.Permissions, "", new { @class = "text-danger" })
        </div>
    </div>
    <!--end::Group-->
</div>
}
<!--end::Form-->
<script src="~/Content/assets/js/pages/crud/forms/widgets/select2.js"></script>
<script>
    jQuery(document).ready(function () {
        var form = KTUtil.getById('_editRoleFrm');
        _editRoleFrm = FormValidation.formValidation(
            document.getElementById('_editRoleFrm'),
            {
                form,
                fields: {
                    Name: {
                        validators: {
                            notEmpty: {
                                message: 'Role Name is required'
                            },
                        }
                    },
                    Description: {
                        validators: {
                            notEmpty: {
                                message: 'Description is required'
                            },
                        }
                    },
                    Permissions: {
                        validators: {
                            choice: {
                                min: 1,
                                message: 'Please kindly select at least one permission'
                            }
                        }
                    },

                },
                plugins: {
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap(),
                }
            }
        );
    });
</script>

