@model eInvoicing.Web.Models.RegisterViewModel
@using eInvoicing.Web.Views.User;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .select2-selection__rendered {
        width: 440px !important;
    }

    .select2-search__field {
        width: 440px !important;
    }
</style>

<div class="subheader py-2 py-lg-6  subheader-transparent" id="kt_subheader">
    <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <div class="d-flex align-items-center flex-wrap mr-1">
            <div class="d-flex align-items-baseline flex-wrap mr-5">
                <!--begin::Breadcrumb-->
                <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Master")" class="text-white">
                            @UserResources.HomeLbl
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="javascript:window.location.reload();" class="text-white">
                            @UserResources.UsersLbl
                        </a>
                    </li>
                </ul>
                <!--end::Breadcrumb-->
            </div>
        </div>
    </div>
</div>
<div class="d-flex flex-column-fluid">
    <div class="container-fluid mt-65">
        <!--begin::Card-->
        <div class="card card-custom gutter-b draggable">
            <!--begin::Header-->
            <div class="card-header bg-light flex-wrap border-0 pt-6 pb-0">
                <div class="card-title">
                    <h3 class="card-label">
                        @UserResources.UsersLbl
                        <span class="d-block text-primary pt-2 font-size-sm">The persons granted access to the Services and Accounts by a System Manager.</span>
                    </h3>
                </div>
                <div class="card-toolbar">
                    <a href="#userEditModal" id="editBtn" data-toggle="modal" hidden class="btn btn-primary font-weight-bolder">
                        <span class="svg-icon svg-icon-light svg-icon-2x">
                            <!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-05-14-112058/theme/html/demo9/dist/../src/media/svg/icons/Communication/Add-user.svg-->
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                    <polygon points="0 0 24 0 24 24 0 24" />
                                    <path d="M18,8 L16,8 C15.4477153,8 15,7.55228475 15,7 C15,6.44771525 15.4477153,6 16,6 L18,6 L18,4 C18,3.44771525 18.4477153,3 19,3 C19.5522847,3 20,3.44771525 20,4 L20,6 L22,6 C22.5522847,6 23,6.44771525 23,7 C23,7.55228475 22.5522847,8 22,8 L20,8 L20,10 C20,10.5522847 19.5522847,11 19,11 C18.4477153,11 18,10.5522847 18,10 L18,8 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
                                    <path d="M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z" fill="#000000" fill-rule="nonzero" />
                                </g>
                            </svg>
                            <!--end::Svg Icon-->
                        </span>
                        @UserResources.NewUserLbl
                    </a>
                    <!--end::Button-->
                </div>
            </div>
            <!--end::Header-->
            <!--begin::Body-->
            <div class="card-body">
                <div class="mb-7">
                    <div class="row align-items-center">
                        <div class="col-lg-12 col-xl-12">
                            <div class="row align-items-center">
                                <div class="col-md-10 my-2 my-md-0">
                                    <a href="#userCreation" data-toggle="modal" class="btn btn-sm btn-primary font-weight-bold btn-square">
                                        <i class="flaticon2-add-1"></i>
                                        @UserResources.CreateBtn
                                    </a>
                                </div>
                                <div class="col-md-2 my-2 my-md-0">
                                    <div class="input-icon">
                                        <input type="text" class="form-control" placeholder=@UserResources.SearchPlaceHolder id="kt_subheader_search_form">
                                        <span><i class="flaticon2-search-1 text-muted"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <!--begin: Datatable-->
                <div class="datatable datatable-bordered datatable-head-custom" id="kt_datatable"></div>
                <!--end: Datatable-->
            </div>

            <!--end::Body-->
        </div>
        <!--end::Card-->
        <!-- Modal-->
        <div class="modal fade modal-sticky-lg" id="userCreation" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
                <div class="modal-content">
                    @using (Html.BeginForm("createuser", "user", FormMethod.Post, new { @class = "", role = "form", id = "_frm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="modal-header">
                            <h5 class="modal-title"><i class="flaticon-user-add"></i> New User</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <i aria-hidden="true" class="ki ki-close"></i>
                            </button>
                        </div>
                        <div class="modal-body" style="padding: 0 !important; height: 500px;">
                            <div class="card-body">
                                <!--begin::Group-->
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)
                                <div class="form-group row">
                                    <div class="col-md-12">
                                        <label>@UserResources.FirstName *</label>
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @placeholder = @UserResources.FirstName, @name = "FirstName" })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-12">
                                        <label>@UserResources.LastName *</label>
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = @UserResources.LastName, @name = "LastName" })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-12">
                                        <label>@UserResources.Title *</label>
                                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @placeholder = "@UserResources.Title", @name = "Title" })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-12">
                                        <label>@UserResources.Email *</label>
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "@UserResources.Email", @type = "text", @name = "Email" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-12">
                                        <label>@UserResources.Password *</label>
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = @UserResources.Password, @name = "Password", @id = "password" })
                                        <div data-field="Password" id="errpassword" data-validator="identical" class="fv-help-block" style="display: none;">Password must be at least 8 characters contains upper, lower case, numbers and special characters</div>
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-12">
                                        <label>@UserResources.ConfirmPassword *</label>
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = @UserResources.ConfirmPassword, @name = "ConfirmPassword" })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-12">
                                        <label>@UserResources.PhoneNumber *</label>
                                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @placeholder = "@UserResources.PhoneNumber", @maxlength = "11", @name = "PhoneNumber" })
                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-12">
                                        <label>@UserResources.Roles *</label>
                                        @Html.ListBoxFor(model => model.Roles, (List<SelectListItem>)ViewBag?.Roles, new { @class = "form-control select2", @id = "kt_select2_4", @name = "Roles", @multiple = "multiple" })
                                        @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @using System.Security.Claims;
                                @using Microsoft.AspNet.Identity;
                                @{var roles = ((ClaimsPrincipal)HttpContext.Current.User).FindAll("Role").Select(i => i.Value.ToLower()).ToList();}
                                @if (Request.IsAuthenticated && roles.Contains("superadmin"))
                                {
                                    <div class="form-group row">
                                        <div class="col-md-12">
                                            <label>@UserResources.BusinessGroup *</label>
                                            @Html.DropDownListFor(model => model.BusinessGroupId, (List<SelectListItem>)ViewBag?.Groups, new { @class = "form-control", @name = "Group" })
                                            @Html.ValidationMessageFor(model => model.BusinessGroupId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }

                                <!--end::Group-->
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-light-primary font-weight-bold" id="closeModal" data-dismiss="modal">@UserResources.CloseBtn</button>
                            <button type="button" id="userSubmission" class="btn btn-sm btn-primary font-weight-bold">@UserResources.SubmitBtn</button>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="modal fade modal-sticky-lg" id="userEditModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
            <div class="modal-dialog  modal-dialog-centered centered modal-dialog-scrollable" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title"><i class="flaticon-user-ok"></i> Edit User</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <i aria-hidden="true" class="ki ki-close"></i>
                        </button>
                    </div>
                    <div class="modal-body" style="padding: 0 !important; height:500px;" id="userEdit">

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light-primary font-weight-bold" id="closeModal2" data-dismiss="modal">@UserResources.CloseBtn</button>
                        <button type="button" id="userEdition" class="btn btn-sm btn-primary font-weight-bold">@UserResources.SaveBtn</button>
                    </div>
                </div>
            </div>
        </div>
        <!--end::Container-->
    </div>
</div>
<script src="~/Content/assets/js/pages/crud/forms/widgets/select2.js"></script>
<script src="~/Content/assets/js/pages/custom/user/list-datatable.js?v=7.0.6"></script>
<script>
    jQuery(document).ready(function () {
        var form = KTUtil.getById('_frm');
        _frmvalidation = FormValidation.formValidation(
            document.getElementById('_frm'),
            {
                form,
                fields: {
                Email: {
                    validators: {
                        notEmpty: {
                            message: '@UserResources.RequiredFieldMsg'
                        },
                        emailAddress: {
                            message: '@UserResources.InvalidEmailMsg'
                        }
                    }
                },
                FirstName: {
                    validators: {
                        notEmpty: {
                            message: '@UserResources.RequiredFieldMsg'
                        },
                    }
                },
                LastName: {
                    validators: {
                        notEmpty: {
                            message: '@UserResources.RequiredFieldMsg'
                        }
                    }
                },
                Title: {
                    validators: {
                        notEmpty: {
                            message: '@UserResources.RequiredFieldMsg'
                        },

                    }
                },
                PhoneNumber: {
                    validators: {
                        notEmpty: {
                            message: '@UserResources.RequiredFieldMsg'
                        },

                    }
                },
                Roles: {
                    validators: {
                        choice: {
                            min: 1,
                            message: '@UserResources.RequiredRolesMsg'
                        }
                    }
                },
                Group: {
                    validators: {
                        notEmpty: {
                            message: '@UserResources.RequiredFieldMsg'
                        },
                    }
                },
                Password: {
                    validators: {
                        notEmpty: {
                            message: '@UserResources.RequiredFieldMsg'
                        }
                    }
                },
                ConfirmPassword: {
                    validators: {
                        identical: {
                            compare: function () {
                                return form.querySelector('[name="Password"]').value;
                            },
                            message: '@UserResources.NonmatchingPasswordMsg'
                        }
                    }
                }

            },
                plugins: {
                    trigger: new FormValidation.plugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap(),
                }
            }
        );
    });

    function deleteUser(id, username) {
        Swal.fire({
            title: "@UserResources.ConfirmDeleteMsg [" + username + "] @UserResources.QuestionMark",
            text: "@UserResources.ConfirmDeleteDesc",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "@UserResources.DeleteBtn",
            cancelButtonText: "@UserResources.CloseBtn",
            reverseButtons: true
        }).then(function (result) {
            if (result.value) {
                KTApp.blockPage();
                $.ajax({
                    url: "/v1/user/deleteuser?id=" + id,
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    success: function (response) {
                        KTApp.unblockPage();
                        if (response.success) {
                            datatable.reload();
                            KTUtil.scrollTop();
                            toastr.options = {
                                "closeButton": false,
                                "debug": false,
                                "newestOnTop": true,
                                "progressBar": false,
                                "positionClass": "toast-bottom-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            };
                            toastr.success("data has been deleted successfully!");
                        }
                        else {
                            toastr.options = {
                                "closeButton": false,
                                "debug": false,
                                "newestOnTop": true,
                                "progressBar": false,
                                "positionClass": "toast-bottom-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            };
                            toastr.error("Something went wrong!");
                        }
                    }
                });
            }
        });
    }
</script>


